# Symbols in the grammar are case-sensitive.
#
# This grammar uses a convention that
#    - terminals are lowercase          (president)
#    - preterminals are capitalized     (Noun)
#    - other nonterminals are all-caps  (NP)
#
# This convention just makes grammars more readable to humans.  Thus:
#
#    - When *you* are writing grammars, you should
#      follow this convention unless you have a good reason not to.
#
#    - But the  *program* should still work with grammars that don't
#      follow this convention.  So how can the program reliably tell
#      the difference between terminal and nonterminal symbols?  If
#      there is at least one rule for rewriting a symbol, then that
#      symbol is a nonterminal and should be rewritten.
#######################

# Rules for creating full sentences.

5	ROOT	S .
1	ROOT	S !
1	ROOT	is it true that S ?     # mixing terminals and nonterminals is ok.

# The basic grammar rules.  Here's what the abbreviations stand for:
#    S  = sentence
#    NP = noun phrase
#    VP = verb phrase
#    PP = prepositional phrase
#    Det = determiner (sometimes called "article")
#    Prep = preposition
#    Adj = adjective
#    Pn = proper nouns (that don't need articles/determiners before them)
#    Cord = Coordinator, words like: and, or
#    Vi = Intransitive verbs, verbs that don't take an argument (at least not obligatory) (like sighed, laugh)
#    Comp = complementizer, for the word 'that'
#    Sbar = Subordinate clause
#    Vt = Transitive verb
#    Nom = nominalization (for example very)
#    Vp = verbs that are followed by a PP
#    VtDontAcceptClause = transitive verbs that don't accept clause
#    PPCoeffiecient = present progressive coefficients
#    Transitiveppv = transitive verbs in present prograssive tense
#    IntransitivePP = intransitive verbs in present prograssive tense
#    ViClausal = Intransitive verbs verbs that get a clausal statement after them (like 'thought' but not 'sighed')
#    VtAcceptAdjAsVerb = Transitive verbs that accepts an adjective (for example: sally is lazy)
#    VPP = verb phrase in present progressive

2	S	NP VP
2   S   NP VPP
2   S   NP PPCoeffiecient VPP
1   S   S Cord S #sentence b
2   S   NP PPCoeffiecient Transitiveppv NP #sentence i
2   S   NP PPCoeffiecient IntransitivePP #sentence i
1   VP  VP Cord VP #sentence b
1	VP	Verb NP
1   VP  Vi #sentence c
1   VP  ViClausal  Sbar #sentence d
1   VP  Vt NP #transitive verbs accepts NP after them, sentence d
1   VPP  NP #sentence i
1   VPP  Adj #sentence h
1   VPP  NP #sentence i
1   VP  Vt NP Sbar #transitive verbs accepts NP after them and sbar, sentence d
1   VP  Vp PP #sentence g
1   NP  NP Cord NP  #sentence b
1   NP  Pn #sentence a
3	NP	Det Noun
1	NP	NP PP
2	PP	Prep NP
1	PP	Prep NP PP
1	Noun	Adj Noun
1   Sbar    Comp S #sentence d



# Vocabulary.  Your program can see that "ate" is a terminal
# symbol because there exists no rule for rewriting it.
# Any symbol that can rewrite as a terminal (or a string of
# terminals, like "chief of staff") is called a "preterminal."  Notice
# that a preterminal is a special kind of nonterminal.

1	Verb	ate
1	Verb	wanted
1	Verb	kissed
1	Verb	understood
1	Verb	pickled


2   Vp    worked #sentence g

1   Vi  sighed #sentence c
1   Vi  thought
1   Vi  ate
1   Vi worked



10   ViClausal  thought #to enable statements like 'thought that...' - sentence d

1   Vt  eat
1   Vt  ate
1   Vt  wanted
1   Vt  perplexed #sentence e


1	Det	the
1	Det	a
2	Det	every

1	Noun	president
1	Noun	sandwich
1	Noun	pickle
1	Noun	chief of staff
1	Noun	floor
2   Noun    proposal #sentence g
2   Noun    desk #sentence g

2	Adj	fine
2	Adj	delicious
2	Adj	perplexed
2	Adj	pickled
1   Adj Nom Adj
2   Adj lazy

1	Prep	with
2	Prep	on
1	Prep	under
1	Prep	in

1   Pn  Sally   #sentence a
1   Pn  it  #sentence e

1   Cord and #sentence b
1   Cord or #sentence b

1   Comp that #sentence d

1   Nom very #sentence f

1   PPCoeffiecient  is #sentence i

4   IntransitivePP eating
1   IntransitivePP   IntransitivePP Cord IntransitivePP #sentence h

4   Transitiveppv   eating #sentence h
1   Transitiveppv   Transitiveppv Cord Transitiveppv #sentence h (to allow the sentence, for example: is eating and kissing and dancing)

#1   It  it #sentence e
#10   S   Pn Verb NP Sbar
#4   S   It Verb Sbar
#2   S   NP Is Verb #sentence h #not sure it grammatical
#2   VP  Transitiveppv
#1   Vt  thought #sentence d
#1   VP  Vtn NP  #to allow without Sbar afer that
#10   VP  Vtn NP  Sbar#to allow without Sbar afer that
#3   S   NP Is Adj #sentence i


#1   VtDontAcceptClause is
#1   VtAcceptAdjAsVerb   is
